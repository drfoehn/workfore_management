# Generated by Django 5.1.6 on 2025-03-09 16:48

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('OWNER', 'Ordinationsinhaber/in'), ('ASSISTANT', 'Ordinationsassistenz'), ('CLEANING', 'Reinigungsdienst'), ('THERAPIST', 'Therapeut/in')], default='ASSISTANT', max_length=10)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Stundenlohn')),
                ('room_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Raummiete pro Stunde')),
                ('color', models.CharField(default='#3498DB', help_text='Farbe für die Anzeige in Kalendern und Listen', max_length=7, verbose_name='Anzeigefarbe')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('mobile', models.CharField(blank=True, max_length=20, verbose_name='Mobil')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-Mail')),
                ('street', models.CharField(blank=True, max_length=100, verbose_name='Straße')),
                ('zip_code', models.CharField(blank=True, max_length=10, verbose_name='PLZ')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ort')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Geburtsdatum')),
                ('employed_since', models.DateField(blank=True, null=True, verbose_name='Angestellt seit')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClosureDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Datum')),
                ('name', models.CharField(max_length=100, verbose_name='Bezeichnung')),
                ('type', models.CharField(choices=[('HOLIDAY', 'Gesetzlicher Feiertag'), ('VACATION', 'Ordinationsurlaub'), ('TRAINING', 'Fortbildung'), ('OTHER', 'Sonstiges')], default='OTHER', max_length=20, verbose_name='Art der Schließung')),
                ('is_recurring', models.BooleanField(default=False, help_text='Gilt für gesetzliche Feiertage', verbose_name='Jährlich wiederkehrend')),
                ('notes', models.TextField(blank=True, verbose_name='Notizen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Schließtag',
                'verbose_name_plural': 'Schließtage',
                'ordering': ['date'],
                'unique_together': {('date', 'type')},
            },
        ),
        migrations.CreateModel(
            name='ScheduleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Montag'), (1, 'Dienstag'), (2, 'Mittwoch'), (3, 'Donnerstag'), (4, 'Freitag'), (5, 'Samstag'), (6, 'Sonntag')], verbose_name='Wochentag')),
                ('start_time', models.TimeField(verbose_name='Beginn')),
                ('end_time', models.TimeField(verbose_name='Ende')),
                ('valid_from', models.DateField(default=datetime.date.today, verbose_name='Gültig ab')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Mitarbeiter')),
            ],
            options={
                'verbose_name': 'Arbeitszeit-Vorlage',
                'verbose_name_plural': 'Arbeitszeit-Vorlagen',
                'ordering': ['-valid_from', 'weekday'],
            },
        ),
        migrations.CreateModel(
            name='SickLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('SUBMITTED', 'Krankmeldung vorgelegt'), ('PENDING', 'Keine Krankmeldung')], default='PENDING', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sick_leaves', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TherapistBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('difference_hours', models.DecimalField(blank=True, decimal_places=2, help_text='Differenz zwischen geplanten und tatsächlichen Stunden', max_digits=4, null=True, verbose_name='Stundendifferenz')),
                ('notes', models.TextField(blank=True)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Ausstehend'), ('PAID', 'Bezahlt')], default='PENDING', max_length=10, verbose_name='Zahlungsstatus')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Bezahlt am')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TherapistScheduleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Montag'), (1, 'Dienstag'), (2, 'Mittwoch'), (3, 'Donnerstag'), (4, 'Freitag'), (5, 'Samstag'), (6, 'Sonntag')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('valid_from', models.DateField(default=datetime.date.today, verbose_name='Gültig ab')),
                ('hours', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('therapist', models.ForeignKey(limit_choices_to={'role': 'THERAPIST'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-valid_from', 'weekday', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='TimeCompensation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Datum')),
                ('hours', models.DecimalField(decimal_places=2, default=8, help_text='Standardmäßig 8 Stunden für einen vollen Arbeitstag', max_digits=4, verbose_name='Stunden')),
                ('status', models.CharField(choices=[('REQUESTED', 'Angefragt'), ('APPROVED', 'Genehmigt'), ('REJECTED', 'Abgelehnt')], default='REQUESTED', max_length=10, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Anmerkungen')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Mitarbeiter')),
            ],
            options={
                'verbose_name': 'Zeitausgleich',
                'verbose_name_plural': 'Zeitausgleiche',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='user_documents/%Y/%m/%d/')),
                ('display_name', models.CharField(default='', max_length=255, verbose_name='Anzeigename')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, default='', verbose_name='Notizen')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dokument',
                'verbose_name_plural': 'Dokumente',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Vacation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('REQUESTED', 'Beantragt'), ('APPROVED', 'Genehmigt'), ('REJECTED', 'Abgelehnt')], default='REQUESTED', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Monat')),
                ('year', models.IntegerField(verbose_name='Jahr')),
                ('total_hours', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Gesamtstunden')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Gesamtbetrag')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('employee', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='OvertimeAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('total_overtime', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('hours_for_payment', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('hours_for_timecomp', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_finalized', models.BooleanField(default=False)),
                ('finalized_at', models.DateTimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', '-month'],
                'unique_together': {('employee', 'year', 'month')},
            },
        ),
        migrations.CreateModel(
            name='VacationEntitlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('total_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('employee', 'year')},
            },
        ),
        migrations.CreateModel(
            name='WorkingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('break_duration', models.DurationField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('soll_start', models.TimeField(blank=True, null=True)),
                ('soll_end', models.TimeField(blank=True, null=True)),
                ('ist_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('soll_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sick_leave', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='working_hours', to='wfm.sickleave')),
                ('time_comp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='working_hours', to='wfm.timecompensation')),
                ('vacation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='working_hours', to='wfm.vacation')),
            ],
            options={
                'verbose_name': 'Arbeitszeit',
                'verbose_name_plural': 'Arbeitszeiten',
                'ordering': ['-date', 'start_time'],
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
