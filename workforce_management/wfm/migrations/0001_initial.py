# Generated by Django 5.1.6 on 2025-02-12 10:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('OWNER', 'Ordinationsinhaber/in'), ('ASSISTANT', 'Ordinationsassistenz'), ('THERAPIST', 'Therapeut/in')], default='ASSISTANT', max_length=10)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Stundenlohn')),
                ('room_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Raummiete pro Stunde')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SickLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Beginn Krankenstand')),
                ('end_date', models.DateField(verbose_name='Ende Krankenstand')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Beschreibung')),
                ('document_provided', models.BooleanField(default=False, verbose_name='Krankmeldung vorgelegt')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TherapistBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Datum')),
                ('start_time', models.TimeField(verbose_name='Von')),
                ('end_time', models.TimeField(verbose_name='Bis')),
                ('status', models.CharField(choices=[('RESERVED', 'Reserviert'), ('USED', 'Verwendet'), ('CANCELLED', 'Storniert')], default='RESERVED', max_length=10, verbose_name='Status')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Anmerkungen')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('therapist', models.ForeignKey(limit_choices_to={'role': 'THERAPIST'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Therapeut/in')),
            ],
            options={
                'verbose_name': 'Raumbuchung',
                'verbose_name_plural': 'Raumbuchungen',
                'ordering': ['-date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='TimeCompensation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Datum')),
                ('hours', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Stunden')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Anmerkungen')),
                ('status', models.CharField(choices=[('REQUESTED', 'Beantragt'), ('APPROVED', 'Genehmigt'), ('REJECTED', 'Abgelehnt')], default='REQUESTED', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Mitarbeiter')),
            ],
            options={
                'verbose_name': 'Zeitausgleich',
                'verbose_name_plural': 'Zeitausgleiche',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Vacation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Urlaubsbeginn')),
                ('end_date', models.DateField(verbose_name='Urlaubsende')),
                ('status', models.CharField(choices=[('REQUESTED', 'Angefragt'), ('APPROVED', 'Genehmigt'), ('REJECTED', 'Abgelehnt')], default='REQUESTED', max_length=10)),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Anmerkungen')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Monat')),
                ('year', models.IntegerField(verbose_name='Jahr')),
                ('total_hours', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Gesamtstunden')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Gesamtbetrag')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('employee', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='ScheduleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Montag'), (1, 'Dienstag'), (2, 'Mittwoch'), (3, 'Donnerstag'), (4, 'Freitag'), (5, 'Samstag'), (6, 'Sonntag')], verbose_name='Wochentag')),
                ('start_time', models.TimeField(verbose_name='Beginn')),
                ('end_time', models.TimeField(verbose_name='Ende')),
                ('shift_type', models.CharField(choices=[('MORNING', 'Vormittag'), ('AFTERNOON', 'Nachmittag'), ('EVENING', 'Abend'), ('OTHER', 'Sonstige')], default='MORNING', max_length=20, verbose_name='Schicht')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Mitarbeiter')),
            ],
            options={
                'verbose_name': 'Arbeitszeit-Vorlage',
                'verbose_name_plural': 'Arbeitszeit-Vorlagen',
                'unique_together': {('employee', 'weekday', 'shift_type')},
            },
        ),
        migrations.CreateModel(
            name='VacationEntitlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='Jahr')),
                ('total_days', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(50)], verbose_name='Gesamte Urlaubstage')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('employee', 'year')},
            },
        ),
        migrations.CreateModel(
            name='WorkingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField(verbose_name='Beginn')),
                ('end_time', models.TimeField(verbose_name='Ende')),
                ('break_duration', models.DurationField(default='0:00:00', verbose_name='Pausendauer')),
                ('shift_type', models.CharField(choices=[('MORNING', 'Vormittag'), ('AFTERNOON', 'Nachmittag'), ('EVENING', 'Abend'), ('OTHER', 'Sonstige')], max_length=20, verbose_name='Schicht')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Anmerkungen')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Arbeitszeit',
                'verbose_name_plural': 'Arbeitszeiten',
                'ordering': ['-date', '-start_time'],
                'constraints': [models.UniqueConstraint(fields=('employee', 'date', 'shift_type'), name='unique_shift_per_day')],
            },
        ),
    ]
